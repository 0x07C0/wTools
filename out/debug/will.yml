about:
  name: wTools
  description: >-
    Collection of general purpose tools for solving problems. Fundamentally
    extend JavaScript without spoiling namespace, so may be used solely or in
    conjunction with another module of such kind.
  version: 0.9.0
  enabled: 1
  license: MIT
  npm.name: wTools
  author: Kostiantyn Wandalen <wanalen@01.school>
  keywords:
    - base
    - basic
    - core
    - platform
    - tools
    - wTools
    - wBase
    - generic
  contributors:
    - Kostiantyn Wandalen <wanalen@01.school>
    - Volodymyr M. <volodymyr.migdal@gmail.com>
    - Ihor O. <iostashvxi@gmail.com>
    - Pablo Garcimartin <pablogarcimartinruiz@gmail.com>
    - Dmytro Kryvoruchko <dm.vict.kr@gmail.com>
  interpreters:
    - njs >= 10.0.0
    - chrome >= 60.0.0
    - firefox >= 60.0.0
  npm.scripts:
    test: wtest .run proto/**
    docgen: wdocgen .build proto
build:

  #

  build.debug :
    criterion :
      debug : debug
      tests : 'no.tests'
    steps :
      - step::clean.build.out.*=1
      - step::transpile.build.proto.debug.*=1
      - step::reflect.module.files.*=1
  build.release :
    criterion :
      debug : release
      tests : 'no.tests'
    steps :
      - step::clean.build.out.*=1
      - step::transpile.build.proto.release.*=1
      - step::reflect.module.files.*=1
  build.release.min :
    steps :
      - step::clean.release.min
      - step::transpile.build.release.min
      - step::reflect.module.files.release.no.tests
  build.debug.tests :
    criterion :
      debug : debug
      tests : 'only.tests'
    steps :
      - step::clean.build.out.*=1
      - step::transpile.build.proto.debug.no.tests
      - step::reflect.compiled.debug.files
      - step::transpile.build.tests.debug.*=1
      - step::reflect.module.files.*=1
  build.release.tests :
    criterion :
      debug : release
      tests : 'only.tests'
    steps :
      - step::clean.build.out.*=1
      - step::transpile.build.proto.release.no.tests
      - step::reflect.compiled.release.files
      - step::transpile.build.tests.release.*=1
      - step::reflect.module.files.*=1

  #

  proto.export:
    criterion:
      content: proto
      export: 1
    steps:
      - 'step::proto.export'
  doc.export:
    criterion:
      content: doc
      export: 1
    steps:
      - 'step::doc.export'
  npm.export:
    criterion:
      content: npm
      export: 1
    steps:
      - 'step::npm.publish'
  export:
    criterion:
      default: 1
      export: 1
    steps:
      - 'build::proto.export'
  debug:
    criterion:
      default: 1
      debug: debug
      raw: raw
      content: prime
    steps:
      - 'step::clean.out*=2'
      - reflect.proto.*=1
  compiled.debug:
    criterion:
      debug: debug
      raw: compiled
      content: prime
    steps:
      - 'step::clean.out*=2'
      - transpile.proto.no.tests*=1
      - transpile.proto.only.tests*=1
  raw.release:
    criterion:
      debug: release
      raw: raw
      content: prime
    steps:
      - 'step::clean.out*=2'
      - transpile.proto.raw
  release:
    criterion:
      debug: release
      raw: compiled
      content: prime
    steps:
      - 'step::clean.out*=2'
      - transpile.proto.no.tests*=1
      - transpile.proto.only.tests*=1
  npm:
    criterion:
      debug:
        - debug
        - release
      raw:
        - raw
        - compiled
    steps:
      - npm.generate.*=1
  npm.proto:
    criterion:
      conent: proto
    steps:
      - npm.generate.proto
  all:
    steps:
      - 'build::debug'
      - 'build::compiled.debug'
      - 'build::raw.release'
      - 'build::release'
      - 'build::npm.*=5'
path:
  repository: 'git+https:///github.com/Wandalen/wTools.git/'
  origins:
    - 'git+https:///github.com/Wandalen/wTools.git/'
    - 'npm:///wtools.experiment'
  bugtracker: 'https:///github.com/Wandalen/wTools/issues'
  in: .
  out: out
  temp:
    - 'path::out'
    - package-lock.json
    - package.json
    - node_modules
  proto: ./proto
  export: '{path::proto}/**'
  doc: ./doc

  #

  out.build.debug.no.test :
    path: '{path::out}/debug'
    criterion:
      debug: debug
      tests: 'no.tests'
  out.build.release.no.test :
    path: '{path::out}/release'
    criterion:
      debug: release
      tests: 'no.tests'
  out.build.debug.only.test :
    path: '{path::out}/debug.test'
    criterion:
      debug: debug
      tests: 'only.tests'
  out.build.release.only.test :
    path: '{path::out}/release.test'
    criterion:
      debug: release
      tests: 'only.tests'
  out.release.min :
    path: '{path::out}/release.min'

  #

  out.raw.debug:
    path: '{path::out}/debug'
    criterion:
      debug: debug
      raw: raw
      content: prime
  out.compiled.debug:
    path: '{path::out}/compiled.debug'
    criterion:
      debug: debug
      raw: compiled
      content: prime
  out.raw.release:
    path: '{path::out}/raw.release'
    criterion:
      debug: release
      raw: raw
      content: prime
  out.compiled.release:
    path: '{path::out}/release'
    criterion:
      debug: release
      raw: compiled
      content: prime
  entry.proto.no.tests:
    path: 'proto/{path::entry}'
    criterion:
      tests: no.tests
      content: proto
  entry.proto.only.tests:
    path: proto/**/*.test.*
    criterion:
      tests: only.tests
  entry.out.raw:
    path: '{path::out.*=1}/source/{path::entry}'
    criterion:
      debug:
        - debug
        - release
      raw: raw
      content: prime
  entry.out.compiled:
    path: '{path::out.*=}/source/Index.s'
    criterion:
      debug:
        - debug
        - release
      raw: compiled
      content: prime
  npm.proto.entry:
    - proto/wtools/abase/l1/Include.s
    - proto/node_modules/wTools
reflector:

  #

  transpile.reflect.proto :
    inherit : predefined.*
    criterion :
      debug : [ debug, release ]
      tests : 'no.tests'
    filePath :
      '**.test*' : 0
      '**.test/**' : 0
      '{path::proto}/**' : '{path::out.build.*=1}/Main.s'
  transpile.reflect.release.min :
    inherit : predefined.*
    filePath :
      '**.test*' : 0
      '**.test/**' : 0
      '{path::proto}/**' : '{path::out.release.min}/Main.s'
  transpile.reflect.tests :
    inherit : predefined.*
    criterion :
      debug : [ debug, release ]
      tests : 'only.tests'
    filePath :
      '**.test*': 1
      '{path::proto}/**': '{path::out.build*=1}/Tests.test.s'
  reflect.module.files :
    inherit : predefined.*
    criterion :
      debug : [ debug, release ]
      tests : [ 'no.tests', 'only.tests' ]
    filePath :
      '{path::in}/License': '{path::out.build.*=1}/License'
      '{path::in}/Readme.md': '{path::out.build.*=1}/Readme.md'
      '{path::in}/will.yml': '{path::out.build.*=1}/will.yml'
  reflect.compiled.debug.files :
    inherit : predefined.*
    filePath :
      '{path::out.build.debug.no.test}/Main.s': '{path::out.build.debug.only.test}/Main.s'
  reflect.compiled.release.files :
    inherit : predefined.*
    filePath :
      '{path::out.build.release.no.test}/Main.s': '{path::out.build.release.only.test}/Main.s'

  #

  reflect.proto:
    inherit: predefined.*
    criterion:
      tests: no.tests
      debug:
        - debug
        - release
      raw:
        - raw
        - compiled
      content: prime
    filePath:
      'path::proto': '{path::out.*=1}/source'
  transpile.proto.raw:
    inherit: predefined.*
    step:
      inherit: files.transpile
      entry: 'path::entry.proto.no.tests'
    criterion:
      raw: raw
      debug: release
      content: prime
    filePath:
      'path::proto': '{path::out.raw.release}'
  transpile.proto.no.tests.compiled:
    inherit: predefined.*
    step:
      inherit: files.transpile
      entry: 'path::entry.proto.*=1'
    criterion:
      tests: no.tests
      raw: compiled
      debug:
        - debug
        - release
      content: prime
    filePath:
      '**.test*': 0
      '**.test/**': 0
      'path::proto': '{path::out.*=1}/Main.s'
  transpile.proto.only.tests.compiled:
    inherit: predefined.*
    step:
      inherit: files.transpile
      entry: 'path::entry.proto.*=1'
      external.before: '{path::out.*=1}/Main.s'
    criterion:
      tests: only.tests
      raw: compiled
      debug:
        - debug
        - release
      content: prime
    filePath:
      '**.test*': 1
      'path::proto': '{path::out.*=1}/Tests.test.s'
step:

  #

  transpile.build.proto.debug :
    inherit : files.transpile
    filePath : reflector::transpile.reflect.proto.*=1
    entry : '{path::in}/proto/wtools/abase/l1/Include.s'
    transpilingStrategy : [ 'Nop' ]
    optimization : 0
    minification : 0
    diagnosing : 0
    beautifing : 0
    criterion :
      debug : debug
      tests : [ 'no.tests', 'only.tests' ]
  transpile.build.proto.release :
    inherit : files.transpile
    filePath : reflector::transpile.reflect.proto.*=1
    entry : '{path::in}/proto/wtools/abase/l1/Include.s'
    transpilingStrategy : [ 'Uglify' ]
    optimization : 9
    minification : 0
    diagnosing : 0
    beautifing : 0
    criterion :
      debug : release
      tests : [ 'no.tests', 'only.tests' ]
  transpile.build.release.min :
    inherit : files.transpile
    filePath : reflector::transpile.reflect.release.min
    entry : '{path::in}/proto/wtools/abase/l1/Include.s'
    transpilingStrategy : [ 'Uglify' ]
    optimization : 9
    minification : 9
    diagnosing : 0
    beautifing : 0
  transpile.build.tests.debug :
    inherit : files.transpile
    filePath : reflector::transpile.reflect.tests.*=1
    transpilingStrategy : [ 'UglifyJs' ] # Dmytro : experimental, Uglify does not convert BigInts
    optimization : 9
    minification : 9
    diagnosing : 0
    beautifing : 0
    criterion :
      debug : debug
      tests : [ 'no.tests', 'only.tests' ]
  transpile.build.tests.release :
    inherit : files.transpile
    filePath : reflector::transpile.reflect.tests.*=1
    transpilingStrategy : [ 'UglifyJs' ] # Dmytro : experimental, Uglify does not convert BigInts
    optimization : 9
    minification : 9
    diagnosing : 1
    beautifing : 1
    criterion :
      debug : release
      tests : [ 'no.tests', 'only.tests' ]
  clean.build.out:
    inherit: files.delete
    filePath: '{path::out.build.*=1}'
    criterion:
      debug:
        - debug
        - release
      tests:
        - no.tests
        - only.tests
  clean.release.min:
    inherit: files.delete
    filePath: '{path::out.release.min}'
  #

  proto.export:
    inherit: module.export
    export: 'path::export'
    tar: 0
    criterion:
      content: proto
  doc.export:
    inherit: module.export
    export: 'path::doc'
    tar: 0
    criterion:
      content: doc
  npm.export:
    inherit: module.export
    export: out.npm
    tar: 0
    criterion:
      content: npm
  npm.publish:
    shell: npm publish
  npm.generate:
    inherit: npm.generate
    entryPath: 'path::entry.out.*=1'
    packagePath: '{path::out.*=1}/package.json'
    filesPath: '{path::out.*=1}/source/**'
    criterion:
      debug:
        - debug
        - release
      raw:
        - raw
        - compiled
      content:
        - prime
  npm.generate.proto:
    inherit: npm.generate
    entryPath: 'path::entry.proto.no.tests'
    packagePath: package.json
    filesPath: '{path::proto}/**'
    criterion:
      content:
        - proto
  clean.out:
    inherit: files.delete
    filePath: '{path::out.*=1}/source'
    criterion:
      debug:
        - debug
        - release
      raw:
        - raw
        - compiled
      tests:
        - no.tests
        - only.tests
      content:
        - prime
        - npm
  clean.out.npm:
    inherit: files.delete
    filePath: 'path::out.*=1'
    criterion:
      debug: debug
      raw: compiled
      tests: no.tests
      content: npm
  tst.proto:
    shell: 'tst {path::proto}'
    criterion:
      content: proto
  tst.debug:
    shell: 'tst {path::out.*=1}'
    criterion:
      content: prime
      debug: debug
  tst.release:
    shell: 'tst {path::out.*=1}'
    criterion:
      content: prime
      debug: release
submodule:
  wTesting:
    path: 'npm:///wTesting'
    enabled: 0
    criterion:
      development: 1
  wTools:
    path: 'hd://.'
    enabled: 0
    criterion:
      development: 1
