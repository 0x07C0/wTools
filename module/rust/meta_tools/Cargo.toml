[package]
name = "meta_tools"
version = "0.1.0"
edition = "2021"
authors = [
  "Kostiantyn Wandalen <wandalen@obox.systems>",
  "Volodymyr M. <volodymyr.migdal@gmail.com>",
  "Dmytro Kryvoruchko <dm.vict.kr@gmail.com>",
]
license = "MIT"
readme = "Readme.md"
documentation = "https://docs.rs/meta_tools"
repository = "https://github.com/Wandalen/wTools/tree/master/module/rust/meta_tools"
homepage = "https://github.com/Wandalen/wTools/tree/master/module/rust/meta_tools"
description = """
Collection of general purpose meta tools.
"""
categories = [ "algorithms", "development-tools" ]
keywords = [ "fundamental", "general-purpose" ]

include = [
  "/rust/impl/meta",
  "/Cargo.toml",
  "/Readme.md",
  "/License",
]

[lib]
name = "meta_tools"
path = "rust/impl/meta/lib.rs"

[[test]]
name = "meta_tools_test"
path = "rust/test/meta/lib_test.rs"

[[example]]
name = "meta_tools_trivial"
path = "sample/rust/meta_tools_trivial/src/main.rs"
# qqq : for Rust dev : please add # aaa : done

[dependencies]
# former = { version = "~0.1", path = "../../rust/former" }
# inspect_type = { version = "~0.1", path = "../../rust/inspect_type" }
# is_slice = { version = "~0.1", path = "../../rust/is_slice" }
# implements = { version = "~0.1", path = "../../rust/implements" }
# meta_tools = { version = "~0.1", path = "../../rust/meta_tools" }
# meta_tools = { version = "~0.1", path = "../../rust/meta_tools" }
# werror = { version = "~0.1", path = "../../rust/werror" }
# winterval = { version = "~0.1", path = "../../rust/winterval" }
# proc_macro_tools = { version = "~0.1", path = "../../rust/proc_macro_tools", optional = true }
literally = "~0.1"
# # maplit = "~1.0"
# regex = "1.5.4"
# chrono = "0.4.19"
# paste = "1.0.5"
# anyhow = "1.0.48"

[dev-dependencies]
wtest_basic = { version = "~0.1", path = "../../rust/wtest_basic" }
# trybuild = { version = "~1.0", features = [ "diff" ] }
# anyhow = "~1.0"
# rustversion = "~1.0"
# quote = { version = "~1.0" }
# proc-macro2 = { version = "~1.0" }
# syn = { version = "~1.0", features = [ "full", "extra-traits", "parsing" ] }
